parameters:
    app.patient_relation_listener.class:                  AppBundle\EventListener\PatientRelationListener
    app.subdomain_listener.class:                         AppBundle\EventListener\SubdomainListener
    app.owner_listener.class:                             AppBundle\EventListener\OwnerListener
    app.acl_filter_manager.class:                         AppBundle\EventListener\AclFilterManager
    app.concession_listener.class:                        AppBundle\EventListener\ConcessionListener
    app.treatment_note_field_listener.class:              AppBundle\EventListener\TreatmentNoteFieldListener
    app.event_resource_listener.class:                    AppBundle\EventListener\EventResourceListener
    app.appointment_listener.class:                       AppBundle\EventListener\AppointmentListener
    app.recall_listener.class:                            AppBundle\EventListener\RecallListener
    app.appointment_notification_listener.class:          AppBundle\EventListener\AppointmentNotificationListener
    app.recall_communication_listener.class:              AppBundle\EventListener\RecallCommunicationListener
    app.appointment_new_patient_listener.class:           AppBundle\EventListener\AppointmentNewPatientListener
    app.appointment_last_event_class_listener.class:      AppBundle\EventListener\AppointmentLastEventClassListener
    app.invoice_status_listener.class:                    AppBundle\EventListener\InvoiceStatusListener
    app.product_stock_level_listener.class:               AppBundle\EventListener\ProductStockLevelListener
    app.timezone_kernel_request_listener.class:           AppBundle\EventListener\TimezoneListener
    app.datetime_listener.class:                          AppBundle\EventListener\DateTimeListener

services:
    app.timezone_kernel_request_listener:
        class: '%app.timezone_kernel_request_listener.class%'
        arguments:
            - "@service_container"
        tags: [{ name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: -255 }]

    app.datetime_listener:
        class: '%app.datetime_listener.class%'
        arguments:
            - "@security.token_storage"
            - "@app.datetime_utils"
        tags:
            - { name: doctrine.event_listener, event: postLoad }

    app.patient_relation_listener:
        class: '%app.patient_relation_listener.class%'
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.subdomain_listener:
        class: "%app.subdomain_listener.class%"
        arguments:
            - "@service_container"
            - "%base_host%"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    app.acl_filter_manager:
        class: "%app.acl_filter_manager.class%"
        arguments:
            - "@security.authorization_checker"
            - "@security.token_storage"
            - '@doctrine.orm.entity_manager'
            - '@app.acl_utils'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    app.owner_listener:
        class: "%app.owner_listener.class%"
        arguments:
            - "@security.token_storage"
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    app.concession_listener:
        class: "%app.concession_listener.class%"
        arguments:
            - "@security.token_storage"
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.treatment_note_field_listener:
        class: "%app.treatment_note_field_listener.class%"
        arguments:
            - "@security.token_storage"
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.event_resource_listener:
        class: "%app.event_resource_listener.class%"
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.appointment_listener:
        class: "%app.appointment_listener.class%"
        arguments:
            - "@event_dispatcher"
        tags:
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }

    app.recall_listener:
        class: "%app.recall_listener.class%"
        arguments:
            - "@event_dispatcher"
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.product_stock_level_listener:
        class: "%app.product_stock_level_listener.class%"
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    app.invoice_status_listener:
        class: "%app.invoice_status_listener.class%"
        tags:
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }

    app.appointment_notification_listener:
        class: "%app.appointment_notification_listener.class%"
        arguments:
            - "@app.hasher"
            - "@app.notificator"
            - "@translator.default"
            - "@app.formatter"
            - "@twig"
        tags:
            - { name: kernel.event_listener, event: appointment.created.post_flush, method: onAppointmentCreated }

    app.recall_communication_listener:
        class: "%app.recall_communication_listener.class%"
        arguments:
            - "@app.hasher"
            - "@app.notificator"
            - "@app.formatter"
            - "@twig"
        tags:
            - { name: kernel.event_listener, event: recall.created, method: onRecallCreated }

    app.appointment_new_patient_listener:
        class: "%app.appointment_new_patient_listener.class%"
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: kernel.event_listener, event: appointment.created, method: onAppointmentCreated }

    app.appointment_last_event_class_listener:
        class: "%app.appointment_last_event_class_listener.class%"
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: kernel.event_listener, event: appointment.updated, method: onAppointmentUpdated }
            - { name: kernel.event_listener, event: appointment.created, method: onAppointmentCreated }

