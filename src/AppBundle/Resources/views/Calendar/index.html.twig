{% extends 'inner.html.twig' %}
{% set header = 'app.calendar.label'|trans %}
{% set headerIcon = 'title-calendar' %}

{% block pageActions %}

    <div class="pull-right margin-left-10">
        <div class="btn-group" role="group">
            <button type="button" class="app-calendar-prev btn btn-default">{{ 'app.calendar.prev'|trans }}</button>
            <button type="button" class="app-calendar-next btn btn-default">{{ 'app.calendar.next'|trans }}</button>
        </div>
    </div>

    <div class="pull-right margin-left-10">
        <form action="">
            <select class="app-calendar-view-range form-control">
                <option value="1" {{ eventUtils.getDaysToShow[1] == '1' ? 'selected' : '' }}>
                    1 {{ 'app.calendar.day'|trans }}</option>
                <option value="3" {{ eventUtils.getDaysToShow[1] == '3' ? 'selected' : '' }}>
                    3 {{ 'app.calendar.days'|trans }}</option>
                <option value="5" {{ eventUtils.getDaysToShow[1] == '5' ? 'selected' : '' }}>{{ 'app.calendar.work_week'|trans }}</option>
                <option value="6" {{ eventUtils.getDaysToShow[1] == '6' ? 'selected' : '' }}>
                    6 {{ 'app.calendar.days'|trans }}</option>
                <option value="7" {{ eventUtils.getDaysToShow[1] == '7' ? 'selected' : '' }}>
                    7 {{ 'app.calendar.days'|trans }}</option>
            </select>
        </form>
    </div>

    <div class="pull-right margin-left-10">
        <button type="button" class="app-calendar-today btn btn-primary">{{ 'app.calendar.today'|trans }}</button>
    </div>

    {#
    <a href="{{ path('appointment_create') }}"
       class="btn btn-primary btn-labeled app-appointment-create"><span class="btn-label"><i
                    class="glyphicon glyphicon-plus"></i></span>{{ 'app.appointment.new'|trans }}</a>
    #}
{% endblock %}

{% block body %}
    <section style="background: #fff;">
        <div id="calendar"></div>
    </section>

    <script>
        $(document).ready(function () {

            var INTERVAL = '{{ eventUtils.interval }}';
            var DAY_START = '{{ eventUtils.dayStart }}';
            var DAY_END = '{{ eventUtils.dayEnd }}';
            var BUSINESS_DAY_START = '{{ eventUtils.businessDayStart }}';
            var BUSINESS_DAY_END = '{{ eventUtils.businessDayEnd }}';
            var COLUMNS = {{ resources|raw }};
            var NUM_COLUMNS = COLUMNS.length;

            $('#calendar').fullCalendar({
                //defaultView: 'multiColAgendaWeek',
                defaultView: '{{ eventUtils.getDaysToShow[0] }}',
                slotDuration: '00:' + INTERVAL + ':00',
                firstDay: 1,
                //minTime: DAY_START,
                //maxTime: DAY_END,
                minTime: BUSINESS_DAY_START,
                maxTime: BUSINESS_DAY_END,
                height: 700,
                weekends: {{ eventUtils.getDaysToShow[2] }},
                businessHours: {
                    start: BUSINESS_DAY_START,
                    end: BUSINESS_DAY_END,
                },
                views: {
                    day: {
                        type: 'multiColAgenda',
                        duration: {days: {{ eventUtils.getDaysToShow[1] }}},
                        numColumns: NUM_COLUMNS,
                        columnHeaders: COLUMNS,
                        columnFormat: 'ddd, D MMM',
                        titleFormat: 'D MMMM',
                        scrollTime: BUSINESS_DAY_START,
                    },
                    week: {
                        type: 'multiColAgenda',
                        duration: {weeks: 1},
                        numColumns: NUM_COLUMNS,
                        columnHeaders: COLUMNS,
                        columnFormat: 'ddd, D MMM',
                        titleFormat: 'D MMMM',
                        scrollTime: BUSINESS_DAY_START,
                    }
                },
                header: {
                    //left: 'month,multiColAgendaWeek,multiColAgendaDay',
                    //center: 'title',
                    //right: 'today prev,next'
                    //left: 'title',
                    left: '',
                    center: '',
                    //right: 'multiColAgendaDay multiColAgendaWeek today prev,next'
                    //right: 'today prev,next'
                    right: ''
                },
                loading: function (isLoading, view) {
                    if (isLoading) {
                        loaderShow();
                    } else {
                        loaderHide();
                    }
                },
                eventRender: function (event, element) {
                    if (event.birthday) {
                        element.append('<div style="position: absolute; top: 3px; right: 2px;"><div style="border-radius: 50%;width: 14px;height: 14px; background: #fff; color: #000; text-align: center;"><div class="fc-treatment"><span class="fa fa-birthday-cake"></div></div></div>');
                    }
                },
                eventSources: [
                    Routing.generate('event_list')
                ],
                dayClick: function (date, jsEvent, view) {
                    {% if rescheduleEventId is defined %}
                    eventEdit('{{ rescheduleEventId }}', null, {'date': date.format()});
                    {% elseif bookAgainEventId is defined %}
                    eventEdit('{{ bookAgainEventId }}', null, {'bookAgainDate': date.format(), 'bookAgain': true});
                    {% else %}
                    {% if patient is defined %}
                    appointmentCreate(date.format(), '{{ patient }}');
                    {% else %}
                    appointmentCreate(date.format());
                    {% endif %}
                    {% endif %}
                },
                eventClick: function (calEvent, jsEvent, view) {
                    //eventEdit(calEvent.id);
                    eventView(calEvent.id);
                },
                eventAfterAllRender: function (view) {
                    var divider = $('.fc-divider').first();
                    var dividerOffset = divider.offset().left;
                    $('.fc-scroller').eq(3).scroll(function () {
                        var scrollLeft = $('.fc-scroller').eq(3).scrollLeft();
                        if (scrollLeft >= 0) {
                            var total = dividerOffset - scrollLeft;
                            $('.fc-head').css('left', total + 'px');
                        }
                        else {
                            $('.fc-head').css('position', 'relative');
                            $('.fc-head').css('left', dividerOffset + 'px');
                        }
                    });

                },
                eventDrop: function (event, delta, revertFunc) {
                    var url = Routing.generate('event_reschedule', {
                        'id': event.id,
                        'column': event.column,
                        'delta': delta.asMinutes()
                    });
                    $.ajax({
                        url: url,
                        type: "POST",
                        dataType: "json",
                        data: {},
                        success: function (data, textStatus) {
                            if (!data) {
                                $('#calendar').fullCalendar('refetchEvents');
                                notify('app.message.undefined_error', 'danger');
                                return;
                            }
                            $('#calendar').fullCalendar('updateEvent', event);
                            notify('app.appointment.message.rescheduled', 'success');
                        },
                        error: function () {
                            $('#calendar').fullCalendar('refetchEvents');
                            notify('app.message.undefined_error', 'danger');
                        }
                    });
                },
                eventResize: function (event, delta, revertFunc, jsEvent, ui, view) {
                    var url = Routing.generate('event_resize', {'id': event.id, 'stop': event.end.format()});

                    if (event.start.format().split('T')[0] !== event.end.format().split('T')[0]) {
                        notify('app.event.message.cannot_resize_between_dates', 'danger');
                        revertFunc();
                        return;
                    }

                    $.ajax({
                        url: url,
                        type: "POST",
                        dataType: "json",
                        data: {},
                        success: function (data, textStatus) {
                            if (!data) {
                                $('#calendar').fullCalendar('refetchEvents');
                                notify('app.message.undefined_error', 'danger');
                                return;
                            }
                            $('#calendar').fullCalendar('updateEvent', event);
                            notify('app.appointment.message.resized', 'success');
                        },
                        error: function () {
                            $('#calendar').fullCalendar('refetchEvents');
                            notify('app.message.undefined_error', 'danger');
                        }
                    });
                },
                scrollTime: moment(),
                allDaySlot: false,
                slotEventOverlap: false,
                //eventOverlap: false
            });

        });

        $('body').on('change', '.app-calendar-view-range', function () {
            loaderShow();
            $.ajax({
                url: Routing.generate('calendar_update_view_range', {'days': $(this).val()}),
                type: "POST",
                dataType: "json",
                data: {},
                success: function (data, textStatus) {
                    window.location.reload();
                },
                error: function () {
                    loaderHide();
                    $('#calendar').fullCalendar('refetchEvents');
                    notify('app.message.undefined_error', 'danger');
                }
            });
        });

        $('body').on('click', '.app-calendar-prev', function () {
            $('#calendar').fullCalendar('prev');
        });

        $('body').on('click', '.app-calendar-next', function () {
            $('#calendar').fullCalendar('next');
        });

        $('body').on('click', '.app-calendar-today', function () {
            $('#calendar').fullCalendar('today');
        });

    </script>

    {% include "@App/Event/scripts.html.twig" %}
    {% include "@App/Event/modal.html.twig" %}
    {% include "@App/Appointment/include/modal.html.twig" %}
    {% include "@App/UnavailableBlock/include/modal.html.twig" %}

{% endblock %}
