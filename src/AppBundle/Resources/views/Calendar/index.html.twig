{% extends 'inner.html.twig' %}
{% set header = 'app.calendar.label'|trans %}
{% set headerIcon = 'title-calendar' %}

{% block pageActions %}

    <div class="pull-right margin-left-10">
        <div class="btn-group" role="group">
            <button type="button" class="app-calendar-prev btn btn-default">{{ 'app.calendar.prev'|trans }}</button>
            <button type="button" class="app-calendar-next btn btn-default">{{ 'app.calendar.next'|trans }}</button>
        </div>
    </div>

    <div class="pull-right margin-left-10">
        <form action="">
            <select class="app-calendar-view-range form-control">
                <option value="1" {{ eventUtils.getDaysToShow[1] == '1' ? 'selected' : '' }}>
                    1 {{ 'app.calendar.day'|trans }}</option>
                <option value="3" {{ eventUtils.getDaysToShow[1] == '3' ? 'selected' : '' }}>
                    3 {{ 'app.calendar.days'|trans }}</option>
                <option value="5" {{ eventUtils.getDaysToShow[1] == '5' ? 'selected' : '' }}>
                    5 {{ 'app.calendar.days'|trans }}{#{{ 'app.calendar.work_week'|trans }}#}</option>
                <option value="6" {{ eventUtils.getDaysToShow[1] == '6' ? 'selected' : '' }}>
                    6 {{ 'app.calendar.days'|trans }}</option>
                <option value="7" {{ eventUtils.getDaysToShow[1] == '7' ? 'selected' : '' }}>
                    7 {{ 'app.calendar.days'|trans }}</option>
            </select>
        </form>
    </div>

    <div class="pull-right margin-left-10">
        <button type="button" class="app-calendar-today btn btn-primary">{{ 'app.calendar.today'|trans }}</button>
    </div>

    {#
    <a href="{{ path('appointment_create') }}"
       class="btn btn-primary btn-labeled app-appointment-create"><span class="btn-label"><i
                    class="glyphicon glyphicon-plus"></i></span>{{ 'app.appointment.new'|trans }}</a>
    #}
{% endblock %}

{% block body %}
    <section class="calendar-section">
        <div id="calendar"></div>
        <div class="app-date-jumper-toggler-container">
            <a class="app-date-jumper-toggler">
                <i class="fa fa-calendar-o" style="font-size:14px;" aria-hidden="true"></i>
            </a>
        </div>
    </section>

    <script>
        $(document).ready(function () {

            var INTERVAL = '{{ eventUtils.interval }}';
            var BUSINESS_DAY_START = '{{ eventUtils.workDayStart }}';
            var BUSINESS_DAY_END = '{{ eventUtils.workDayEnd }}';
            var COLUMNS = {{ resources|raw }};
            var NUM_COLUMNS = COLUMNS.length;

            $('#calendar').fullCalendar({
                defaultView: '{{ eventUtils.getDaysToShow[0] }}',
                slotDuration: '00:' + INTERVAL + ':00',
                firstDay: 1,
                minTime: BUSINESS_DAY_START,
                maxTime: BUSINESS_DAY_END,
                height: "auto",
                weekends: {{ eventUtils.getDaysToShow[2] }},
                businessHours: {
                    start: BUSINESS_DAY_START,
                    end: BUSINESS_DAY_END,
                },
                views: {
                    day: {
                        type: 'multiColAgenda',
                        duration: {days: {{ eventUtils.getDaysToShow[1] }}},
                        numColumns: NUM_COLUMNS,
                        columnHeaders: COLUMNS,
                        columnFormat: 'ddd, D MMM',
                        titleFormat: 'D MMMM',
                        scrollTime: BUSINESS_DAY_START,
                    },
                    week: {
                        type: 'multiColAgenda',
                        duration: {weeks: 1},
                        numColumns: NUM_COLUMNS,
                        columnHeaders: COLUMNS,
                        columnFormat: 'ddd, D MMM',
                        titleFormat: 'D MMMM',
                        scrollTime: BUSINESS_DAY_START,
                    }
                },
                header: {
                    left: '',
                    center: '',
                    right: ''
                },
                loading: function (isLoading, view) {
                    if (isLoading) {
                        loaderShow();
                    } else {
                        loaderHide();
                    }
                },
                eventRender: function (event, element) {

                    $('<div class="clearfix"></div>').insertAfter($(element).find('.fc-title:first'));

                    if (event.birthday) {
                        element.append('<div style="position: absolute; top: 3px; right: 2px;"><div style="border-radius: 50%;width: 14px;height: 14px; background: #fff; color: #000; text-align: center;"><div class="fc-treatment"><span class="fa fa-birthday-cake"></span></div></div></div>');
                    }
                    if (event.unpaidInvoice) {
                        $(element).find('.fc-content:first').prepend('<div class="pull-left" style="margin: 3px 2px 0px 2px; border: 1px solid white; border-radius: 50%;width: 5px;height: 5px; background: red; color: #000; text-align: center;"></div>');
                    }
                    if (event.treatment) {
                        $(element).find('.fc-content:first').append('<div style="padding-left: 1px;">'+event.treatment+'</div>');
                    }

                    $(element).find('.fc-time:first').detach().addClass('fc-time-font').appendTo($(element).find('.fc-content:first'));

                    if (event.patientAlerts) {
                        $(element).find('.fc-content:first').append('<div style="padding-left: 1px;">&nbsp;</div>');
                        $.each(event.patientAlerts, function(key, value) {
                            $(element).find('.fc-content:first').append('<div style="padding-left: 1px;"><strong>!</strong>&nbsp;'+value+'</div>');
                        });
                    }
                },
                eventSources: [
                    Routing.generate('event_list')
                ],
                dayClick: function (date, jsEvent, view) {
                    var cellIndex = $(this).index();
                    var headerCol = $(this).parents('#calendar').find('td.fc-widget-header').find('th:eq(' + cellIndex + ')');
                    var headerColClass = $(headerCol).attr('class').split(' ')[2];
                    var colIndex = $('td.fc-widget-header').find('.' + headerColClass).index(headerCol);

                    {% if rescheduleEventId is defined %}
                    eventEdit('{{ rescheduleEventId }}', null, {
                        'resourceId': colIndex,
                        'rescheduleDate': date.format()
                    });
                    {% elseif bookAgainEventId is defined %}
                    eventEdit('{{ bookAgainEventId }}', null, {'resourceId': colIndex, 'bookAgainDate': date.format()});
                    {% else %}
                    {% if patient is defined %}
                    appointmentCreate(date.format(), colIndex, '{{ patient }}');
                    {% else %}
                    appointmentCreate(date.format(), colIndex);
                    {% endif %}
                    {% endif %}
                },
                eventClick: function (calEvent, jsEvent, view) {
                    eventView(calEvent.id);
                },
                eventAfterAllRender: function (view) {
                    var divider = $('.fc-divider').first();
                    var dividerOffset = divider.offset().left;
                    $('.fc-scroller').eq(3).scroll(function () {
                        var scrollLeft = $('.fc-scroller').eq(3).scrollLeft();
                        if (scrollLeft >= 0) {
                            var total = dividerOffset - scrollLeft;
                            $('.fc-head').css('left', total + 'px');
                        }
                        else {
                            $('.fc-head').css('position', 'relative');
                            $('.fc-head').css('left', dividerOffset + 'px');
                        }
                    });

                },
                eventDrop: function (event, delta, revertFunc) {

                    bootbox.confirm({
                        title: Translator.trans('app.event.reschedule_modal_header'),
                        message: Translator.trans('app.event.reschedule_modal_text'),
                        buttons: {
                            cancel: {
                                className: 'btn-default',
                                label: Translator.trans('app.action.cancel')
                            },
                            confirm: {
                                className: 'btn-success',
                                label: Translator.trans('app.yes')
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                var url = Routing.generate('event_reschedule', {
                                    'id': event.id,
                                    'column': event.column,
                                    'delta': delta.asMinutes()
                                });
                                $.ajax({
                                    url: url,
                                    type: "POST",
                                    dataType: "json",
                                    data: {},
                                    success: function (data, textStatus) {
                                        event.className = [data.event.className];
                                        event.birthday = data.event.birthday;
                                        event.unpaidInvoice = data.event.unpaidInvoice;
                                        $('#calendar').fullCalendar('updateEvent', event);
                                        notify('app.appointment.message.rescheduled', 'success');
                                    },
                                    error: function () {
                                        $('#calendar').fullCalendar('refetchEvents');
                                        notify('app.message.undefined_error', 'danger');
                                    }
                                });
                            } else {
                                $('#calendar').fullCalendar('refetchEvents');
                            }
                        }
                    });

                },
                eventResize: function (event, delta, revertFunc, jsEvent, ui, view) {
                    var url = Routing.generate('event_resize', {'id': event.id, 'stop': event.end.format()});

                    if (event.start.format().split('T')[0] !== event.end.format().split('T')[0]) {
                        notify('app.event.message.cannot_resize_between_dates', 'danger');
                        revertFunc();
                        return;
                    }

                    $.ajax({
                        url: url,
                        type: "POST",
                        dataType: "json",
                        data: {},
                        success: function (data, textStatus) {
                            event.className = [data.event.className];
                            event.birthday = data.event.birthday;
                            event.unpaidInvoice = data.event.unpaidInvoice;
                            $('#calendar').fullCalendar('updateEvent', event);
                            notify('app.appointment.message.resized', 'success');
                        },
                        error: function () {
                            $('#calendar').fullCalendar('refetchEvents');
                            notify('app.message.undefined_error', 'danger');
                        }
                    });
                },
                viewRender: function (view, element) {
                    var width = $("#calendar th.fc-axis:first").outerWidth();
                    $(".app-date-jumper-toggler-container").css('width', width + 'px');
                },
                scrollTime: moment(),
                allDaySlot: false,
                slotEventOverlap: false
            });

        });

        $('body').on('change', '.app-calendar-view-range', function () {
            loaderShow();
            $.ajax({
                url: Routing.generate('calendar_update_view_range', {'days': $(this).val()}),
                type: "POST",
                dataType: "json",
                data: {},
                success: function (data, textStatus) {
                    window.location.reload();
                },
                error: function () {
                    loaderHide();
                    $('#calendar').fullCalendar('refetchEvents');
                    notify('app.message.undefined_error', 'danger');
                }
            });
        });

        $('body').on('click', '.app-calendar-prev', function () {
            $('#calendar').fullCalendar('prev');
        });

        $('body').on('click', '.app-calendar-next', function () {
            $('#calendar').fullCalendar('next');
        });

        $('body').on('click', '.app-calendar-today', function () {
            $('#calendar').fullCalendar('today');
        });

        $('.app-date-jumper-toggler').popover({
            placement: 'right',
            content: '<div style="width: 250px;"><div id="app-date-jumper"></div></div>',
            html: true,
            animation: false,
            trigger: 'manual',
        }).on('shown.bs.popover', function (el) {
            $('#app-date-jumper').datetimepicker({
                useCurrent: false,
                inline: true,
                sideBySide: false,
                format: 'D MMM Y',
                daysOfWeekDisabled: {{ eventUtils.getDaysToShow[1] == 5 ? '[0,6]' : '[]' }},
            }).on('dp.change', function (e) {
                $('#calendar').fullCalendar('gotoDate', e.date);
                $('.app-date-jumper-toggler').popover('hide');
            });
        });

        $('body').on('click', function (e) {
            if (!$('.app-date-jumper-toggler').is(e.target) && $('.app-date-jumper-toggler').has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                $('.app-date-jumper-toggler').popover('hide');
            }
        });

        $('body').on('click', '.app-date-jumper-toggler', function () {
            // hide any open popovers when the anywhere else in the body is clicked
            $('.app-date-jumper-toggler').popover('toggle');
        });

    </script>

    {% include "@App/Event/scripts.html.twig" %}
    {% include "@App/Event/modal.html.twig" %}
    {% include "@App/Appointment/include/modal.html.twig" %}
    {% include "@App/UnavailableBlock/include/modal.html.twig" %}

{% endblock %}
